[program:freshclam]
command = freshclam -d
autostart = true
autorestart = true
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /var/log/freshclam.log
stderr_logfile_maxbytes = 5000000
stderr_logfile_backups = 3
stopsignal = INT

[program:clamd]
command = clamd
autostart = true
autorestart = true
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /var/log/clamd.log
stderr_logfile_maxbytes = 5000000
stderr_logfile_backups = 3
# SIGHUP actually just makes clamd reopen its logfiles, but really we want to keep clamd up almost as long as
# it'll be allowed so that the uwsgi app can use it in trying to clear its request backlog before
# its grace period runs out
stopsignal = HUP
# bosh will probably kill everything after 10s - stop a second early in the hopes that the logs of our
# last handled request make it off the machine
stopwaitsecs = 9

[program:verapdf-rest]
command = java -Xmx400m -jar /opt/verapdf-rest/verapdf-rest.jar server /etc/verapdf-rest.yml
autostart = true
autorestart = true
user = verapdf-rest
group = verapdf-rest
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /var/log/verapdf-rest.log
stderr_logfile_maxbytes = 5000000
stderr_logfile_backups = 3
# SIGQUIT actually just makes java print a thread stack dump to stdout (which we luckily send to /dev/null), but
# really we want to keep verapdf up almost as long as it'll be allowed so that the uwsgi app can use it in trying to
# clear its request backlog before its grace period runs out
stopsignal = QUIT
# bosh will probably kill everything after 10s - stop a second early in the hopes that the logs of our
# last handled request make it off the machine
stopwaitsecs = 9
